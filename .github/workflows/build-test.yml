name: 'build-test'
on:
  pull_request:
    branches:
      - main
      - dev
  workflow_dispatch:

jobs:
  build: # make sure build/ci work properly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - run: |
          npm install

      - name: Run All
        run: |
          export NODE_OPTIONS=--openssl-legacy-provider
          npm run all

  test: # make sure the action works on a clean machine without building
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Add fake commit
        run: |
          echo "This is a fake text file for testing purposes." > fake.txt
          git add fake.txt
          
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
          git commit -m "feat: add fake text file"

      - name: Run Action - OK
        uses: ./
        id: changelog_ok
        continue-on-error: true
        with:
          version: '100.100.100'

      - name: Test Ok
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: success
              type: Equals
              actual: '${{ steps.changelog_ok.outcome }}'
              expected: 'success'
            - name: version
              type: Equals
              expected: '100.100.100'
              actual: '${{ steps.changelog_ok.outputs.version }}'
            - name: changelog
              type: In
              member: 'add fake text file'
              container: '${{ steps.changelog_ok.outputs.changelog }}'
              case_sensitive: false
# -------------------------------------------------------------------------------

      - name: Run Action - Less Version - Fail
        uses: ./
        id: less_version_error
        continue-on-error: true
        with:
          version: '0.0.0'
          ignore-less-version-error: false

      - name: Test Less Version - Failed
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: success
              type: Equals
              actual: '${{ steps.less_version_error.outcome }}'
              expected: 'failure'
            - name: version
              type: Equals
              expected: ''
              actual: '${{ steps.less_version_error.outputs.version }}'
            - name: version
              type: Equals
              expected: ''
              actual: '${{ steps.less_version_error.outputs.changelog }}'

      - name: Run Action - Less Version - Ok
        uses: ./
        id: less_version_ok
        continue-on-error: true
        with:
          version: '0.0.0'
          ignore-less-version-error: true

      - name: Test Less Version - OK
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: success
              type: Equals
              actual: '${{ steps.less_version_ok.outcome }}'
              expected: 'success'
            - name: version
              type: Equals
              expected: '0.0.0'
              actual: '${{ steps.less_version_ok.outputs.version }}'
            - name: less_version
              type: In
              member: 'add fake text file'
              container: '${{ steps.less_version_ok.outputs.changelog }}'
              case_sensitive: false

# ---------------------------------------------------------------------------------------------------
      - name: Read current version
        run: |
          version=$(node -p -e "require('./package.json').version")
          echo "Current version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV

      - name: Run Action - Same Version - Fail
        uses: ./
        id: same_version_error
        continue-on-error: true
        with:
          version: '${{ env.VERSION }}'
          ignore-same-version-error: false

      - name: Test Same Version - Failed
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: success
              type: Equals
              actual: '${{ steps.same_version_error.outcome }}'
              expected: 'failure'
            - name: version
              type: Equals
              expected: ''
              actual: '${{ steps.same_version_error.outputs.version }}'
            - name: version
              type: Equals
              expected: ''
              actual: '${{ steps.same_version_error.outputs.changelog }}'

      - name: Run Action - Same Version - Ok
        uses: ./
        id: same_version_ok
        continue-on-error: true
        with:
          version: '${{ env.VERSION }}'
          ignore-same-version-error: true

      - name: Test Same Version - OK
        uses: Payadel/assert@v1.0.0
        with:
          fail-fast: false
          verbose: true
          inputs: |
            - name: success
              type: Equals
              actual: '${{ steps.same_version_ok.outcome }}'
              expected: 'success'
            - name: version
              type: Equals
              expected: '${{ env.VERSION }}'
              actual: '${{ steps.same_version_ok.outputs.version }}'
# ---------------------------------------------------------------------------------------------------
      - name: Git status
        run: |
          git_status=$(git status)
          echo "Git Status: $git_status"
          echo "GIT_STATUS=$git_status" >> $GITHUB_ENV
            

#      - name: Delete commit
#        run: git reset --hard HEAD~1
#        if: always()

